cmake_minimum_required(VERSION 3.10)
project(COREAZS)
if (MSVC)
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MD")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MDd")
endif()
# set(CMAKE_THREAD_LIBS_INIT "-lpthread")
#     set(CMAKE_HAVE_THREADS_LIBRARY 1)
#     set(CMAKE_USE_WIN32_THREADS_INIT 0)
#     set(CMAKE_USE_PTHREADS_INIT 1)
#     set(THREADS_PREFER_PTHREAD_FLAG ON)
if(MSVC)
set(FULL_PATH_TO_MYSQL_CONNECTOR_CPP_DIR ConnecterC++/windows)
set(LIBMYSQL ${FULL_PATH_TO_MYSQL_CONNECTOR_CPP_DIR}/lib/vs14)
find_library(MYSQL_LIBRARY mysqlclient HINTS ${LIBMYSQL})
else()
set(FULL_PATH_TO_MYSQL_CONNECTOR_CPP_DIR ConnecterC++/linux)
set(LIBMYSQL ${FULL_PATH_TO_MYSQL_CONNECTOR_CPP_DIR}/lib)
find_library(MYSQL_LIBRARY mysqlclient HINTS ${LIBMYSQL})
endif()
add_library(${PROJECT_NAME} SHARED coreazs.c parser.c src/sqlite3.c src/shell.c)
target_link_libraries(${PROJECT_NAME} PRIVATE ${MYSQL_LIBRARY})

# add_custom_command(TARGET ${PROJECT_NAME} POST_BUILD
# COMMAND ${CMAKE_COMMAND} -E copy_directory ConnecterC++/lib64 $<TARGET_FILE_DIR:${PROJECT_NAME}>)  